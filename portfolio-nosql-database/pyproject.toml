[project]
name = "portfolio-nosql-database"
version = "0.1.0"
description = ""
authors = [
    { name = "Raphael Coelho", email = "raphael.phael@gmail.com" }
]
readme = "README.md"
requires-python = ">=3.12,<4.0"

dependencies = [
    "PyYaml==6.0.1",
    "pandas (>=2.2.3,<3.0.0)",
    "faker (>=37.0.2,<38.0.0)",
    "weasyprint (>=65.1,<66.0)",
    "pdfkit (>=1.0.0,<2.0.0)",
    "pyppeteer (>=2.0.0,<3.0.0)",
    "markdown (>=3.8,<4.0)",
    "pandocfilters (>=1.5.1,<2.0.0)",
    "grip (>=4.6.2,<5.0.0)",
]

[tool.poetry]
package-mode = false
# requires-poetry = ">=2.0.1"

[tool.poetry.group.dev.dependencies]
ruff = "^0.11.0"
pytest = "^8.3.4"
pre-commit = "^4.0.1"
pytest-cov = "^6.0.0"
mypy = "^1.15.0"

[tool.pylint]
extension-pkg-allow-list = ["pyodbc", "numpy", "pandas"]
ignore-patterns = [".venv", ".pyenv"]	
disable = [
    "R1720", # R1720:no-else-raise
    "W1201", # W1201:logging-not-lazy
    "R1710", # R1710:inconsistent-return-statements
    "R1705", # R1705:no-else-return
    "W0611", # W0611:unused-imported
    "R0902", # R0902:too-many-instance-attributes
    "W0511", # FIX ME:fixme
    "fixme", # FIX ME:fixme
]


[tool.ruff]
lint.select = ["ALL"]    # Ativar todas as regras de linting, análise e estilo
fix = true               # Ativar correções automáticas
lint.unfixable = []      # Permitir todas as correções
line-length = 100        # Definir o comprimento da linha para 100 caracteres
target-version = "py312" # Compatível com Python 3.12
lint.ignore = [
    "D203",              # Conflito com D211 (linha em branco antes da classe)
    "D212",              # Conflito com D213 (resumo na primeira linha)
    "COM812",            # Conflito com formatador (vírgula ausente)
    "ISC001",            # Já corrigido pelo formatador (concatenação implícita)
    "G004",              # Já corrigido pelo formatador (no-else-return)
    "S101",              # Permite o uso de `assert`
    "PERF401",           # Permite o uso de `for-loop` em vez de `list-comprehension`
    "T201",              # Permite o uso de `print`
    "ERA001",            # Permite o uso de comentários
    "T203",              # Permite o uso de `pprint`
    "ANN401",            # Permite o uso de `Any` em um `return`
    "S105",              # Permite o uso de hardcoded password

    # REMOVER NO FINAL DO PROJETO
    "D100",              # docstring
    "D101",              # docstring
    "D102",              # docstring
    "D107",              # docstring
    "D103",              # docstring
    "F401",              # Ignora a remoção de importações não utilizadas

    # Permissões para `TODO` e `FIXME` 
    "TD001",             # Permite `TODO` sem descrição detalhada
    "TD003",             # Permite `TODO` sem link para issue
    "TD002",             # Permite `TODO` sem identificação do autor
    "FIX001",            # Permite `FIXME` sem descrição detalhada
    "FIX003",            # Permite `FIXME` sem link para issue
    "FIX002",            # Permite `FIXME` sem ser tratado como erro crítico
]
exclude = [
    ".venv",
    "__pycache__",
]

# Ordenação automática de imports (substitui o isort)
lint.isort.force-sort-within-sections = true # Forçar a ordenação dentro de seções
lint.isort.combine-as-imports = true         # Permitir importações combinadas

[tool.ruff.format]
quote-style = "double"            # Usar aspas duplas (Black)
indent-style = "space"            # Indentação com espaços (Black)
skip-magic-trailing-comma = false # Manter vírgula mágica (Black)
line-ending = "auto"              # Detectar o tipo de quebra de linha (Black)

[tool.ruff.lint.pydocstyle]
convention = "google"             # Exigir docstrings ("numpy" ou "pep257")

[tool.ruff.lint.flake8-annotations]
mypy-init-return = true           # Exigir anotações de tipo em __init__ e __new__
suppress-none-returning = false   # Não suprimir erros de retorno None
allow-star-arg-any = false        # Não permitir *args e **kwargs sem anotações de tipo

[tool.mypy]
strict = true                     # Ativa as verificações estritas
ignore_missing_imports = true     # Ignora erros de importação ausente
disable_error_code = ["import-untyped"]
exclude = ".venv"

[tool.pytest.ini_options]
pythonpath = [".","src"]         # Adiciona o diretório atual ao PYTHONPATH

[project.urls]
repository = "https://github.com/pagueru/portfolios-business-intelligence-data-analysis"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
